-> Created a new repo named node-sails-chat.

-> Created a remote master branch

-> Researched about Sails framework and understood that it is like what rails is to ruby.

-> Generated the models and controllers. Realized that the generation is similar to Rails.

-> Opened up the route file and added the necessary routes required for the project.

-> Opened up the models and added the attributes respectively.

-> Created the required actions in the Main Controller.

-> When res.view() is called, Sails will look for the file in the following pattern views -> controllerName -> filename.ejs

-> By default the layout.ejs is rendered. We can call specific layouts by using res.view( { layout: "other.ejs" } )

-> Next, added the necessary scripts in the layout in the head tag.

-> Created the homepage with basic html syntax with an ID to each input element.

-> Wrote the js code and included it in the end of the file which listens to the click event of the login button and checks if the username and password fields are filled.

-> And posts data to the '/login' routes and redirects as per the condition.

-> Next, wrote the logic for the signup and login in the controller.

-> Point to be noted : The password is being hashed using the "password-hash" module

-> Wrote the logic for the chat in the chat action.

-> Discovered the way to pass data to views from controller. The data is passed when the view is rendered. In comparion with Rails, all the data is available in the instance variable.

-> Wrote the backbone code for the chat feature.

-> Created message policies to reduce the control on the client side so that no one will be able to modify the js

-> Policies are middleware which run before the actual web request.

-> Get back the app to a clean state by using rm -r .tmp in the terminal.

-> Found an error, the fix was to use findOneByUsername rather than findByUsername

-> One thing to be noted is to call the socket.io.js files in the head section, else the username will not be displayed.

============== My understanding of the given assignment=======================

-> Sails is a framework used to build node js apps. The structure is similar to Ruby on Rails.

-> NPM stands for node package manager

-> Backbone is used to sync the data with the Sails framework

-> Sockets are used for cummunication between client and the server

-> Encountered a few errors during development, but were fixable after reseaching about the error messages.

-> We can change the port number in the locals.js under config dir.

-> Finally, "sails lift" will launch the app in the browser. 