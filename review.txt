-> Created a new repo named node-sails-chat.

-> Created a remote master branch

-> Researched about Sails framework and understood that it is like what rails is to ruby.

-> Generated the models and controllers. Realized that the generation is similar to Rails.

-> Opened up the route file and added the necessary routes required for the project.

-> Opened up the models and added the attributes respectively.

-> Created the required actions in the Main Controller.

-> When res.view() is called, Sails will look for the file in the following pattern views -> controllerName -> filename.ejs

-> By default the layout.ejs is rendered. We can call specific layouts by using res.view( { layout: "other.ejs" } )

-> Next, added the necessary scripts in the layout in the head tag.

-> Created the homepage with basic html syntax with an ID to each input element.

-> Wrote the js code and included it in the end of the file which listens to the click event of the login button and checks if the username and password fields are filled.

-> And posts data to the '/login' routes and redirects as per the condition.

-> Next, wrote the logic for the signup and login in the controller.

-> Point to be noted : The password is being hashed using the "password-hash" module

-> Wrote the logic for the chat in the chat action.

-> Discovered the way to pass data to views from controller. The data is passed when the view is rendered. In comparion with Rails, all the data is available in the instance variable.